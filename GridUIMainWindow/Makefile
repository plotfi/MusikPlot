#############################################################################
# Makefile for building: GridUIMainWindow
# Generated by qmake (1.07a) (Qt 3.3.6) on: Mon Apr  2 00:13:57 2007
# Project:  GridUIMainWindow.pro
# Template: app
# Command: $(QMAKE) -o Makefile GridUIMainWindow.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I/usr/include/qt3 -I/usr/include/kde
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread -lkdecore -lkdeui -L/usr/lib/kde3 
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = GridUIMainWindow.h \
		../GridUICanvas/GridUICanvas.h
SOURCES = GridUIMainWindow.cpp \
		../GridUICanvas/GridUICanvas.cpp \
		../GridMatrix/GridMatrix.cpp \
		../AmarokInfo/AmarokInfo.cpp \
		../CoordinateSongList/CoordinateSongList.cpp \
		../ZDBug/ZDBug.cpp \
		../SongInfo/SongInfo.cpp
OBJECTS = GridUIMainWindow.o \
		GridUICanvas.o \
		GridMatrix.o \
		AmarokInfo.o \
		CoordinateSongList.o \
		ZDBug.o \
		SongInfo.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_GridUIMainWindow.cpp \
		../GridUICanvas/moc_GridUICanvas.cpp
OBJMOC = moc_GridUIMainWindow.o \
		moc_GridUICanvas.o
DIST	   = GridUIMainWindow.pro
QMAKE_TARGET = GridUIMainWindow
DESTDIR  = 
TARGET   = GridUIMainWindow

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: GridUIMainWindow.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile GridUIMainWindow.pro
qmake: 
	@$(QMAKE) -o Makefile GridUIMainWindow.pro

dist: 
	@mkdir -p .tmp/GridUIMainWindow && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/GridUIMainWindow/ && ( cd `dirname .tmp/GridUIMainWindow` && $(TAR) GridUIMainWindow.tar GridUIMainWindow && $(GZIP) GridUIMainWindow.tar ) && $(MOVE) `dirname .tmp/GridUIMainWindow`/GridUIMainWindow.tar.gz . && $(DEL_FILE) -r .tmp/GridUIMainWindow

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

GridUIMainWindow.o: GridUIMainWindow.cpp GridUIMainWindow.h \
		../GridUICanvas/GridUICanvas.h \
		../GridMatrix/GridMatrix.h \
		../AmarokInfo/AmarokInfo.h \
		../CoordinateSongList/CoordinateSongList.h \
		../ZDBug/ZDBug.h \
		../SongInfo/SongInfo.h

GridUICanvas.o: ../GridUICanvas/GridUICanvas.cpp ../GridUICanvas/GridUICanvas.h \
		../GridMatrix/GridMatrix.h \
		../AmarokInfo/AmarokInfo.h \
		../CoordinateSongList/CoordinateSongList.h \
		../ZDBug/ZDBug.h \
		../SongInfo/SongInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GridUICanvas.o ../GridUICanvas/GridUICanvas.cpp

GridMatrix.o: ../GridMatrix/GridMatrix.cpp ../GridMatrix/GridMatrix.h \
		../AmarokInfo/AmarokInfo.h \
		../CoordinateSongList/CoordinateSongList.h \
		../ZDBug/ZDBug.h \
		../SongInfo/SongInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GridMatrix.o ../GridMatrix/GridMatrix.cpp

AmarokInfo.o: ../AmarokInfo/AmarokInfo.cpp ../AmarokInfo/AmarokInfo.h \
		../ZDBug/ZDBug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AmarokInfo.o ../AmarokInfo/AmarokInfo.cpp

CoordinateSongList.o: ../CoordinateSongList/CoordinateSongList.cpp ../CoordinateSongList/CoordinateSongList.h \
		../SongInfo/SongInfo.h \
		../ZDBug/ZDBug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CoordinateSongList.o ../CoordinateSongList/CoordinateSongList.cpp

ZDBug.o: ../ZDBug/ZDBug.cpp ../ZDBug/ZDBug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ZDBug.o ../ZDBug/ZDBug.cpp

SongInfo.o: ../SongInfo/SongInfo.cpp ../SongInfo/SongInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SongInfo.o ../SongInfo/SongInfo.cpp

moc_GridUIMainWindow.o: moc_GridUIMainWindow.cpp  GridUIMainWindow.h ../GridUICanvas/GridUICanvas.h \
		../GridMatrix/GridMatrix.h \
		../AmarokInfo/AmarokInfo.h \
		../CoordinateSongList/CoordinateSongList.h \
		../ZDBug/ZDBug.h \
		../SongInfo/SongInfo.h

moc_GridUICanvas.o: ../GridUICanvas/moc_GridUICanvas.cpp  ../GridUICanvas/GridUICanvas.h ../GridMatrix/GridMatrix.h \
		../AmarokInfo/AmarokInfo.h \
		../CoordinateSongList/CoordinateSongList.h \
		../ZDBug/ZDBug.h \
		../SongInfo/SongInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GridUICanvas.o ../GridUICanvas/moc_GridUICanvas.cpp

moc_GridUIMainWindow.cpp: $(MOC) GridUIMainWindow.h
	$(MOC) GridUIMainWindow.h -o moc_GridUIMainWindow.cpp

../GridUICanvas/moc_GridUICanvas.cpp: $(MOC) ../GridUICanvas/GridUICanvas.h
	$(MOC) ../GridUICanvas/GridUICanvas.h -o ../GridUICanvas/moc_GridUICanvas.cpp

####### Install

install:  

uninstall:  

